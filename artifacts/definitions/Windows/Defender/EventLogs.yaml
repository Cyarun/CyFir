name: Windows.Defender.EventLogs
author: Claude Code Integration
description: |
  This artifact monitors Windows Defender operational event logs for threat 
  detection, scanning activities, and security events.

  Windows Defender generates comprehensive logs in the Microsoft-Windows-Windows 
  Defender/Operational channel including:
  - Threat detections and remediation actions (Event IDs 1116, 1117)
  - Real-time protection events (Event IDs 5001, 5004, 5007)
  - Scan completion events (Event IDs 1001, 1002)
  - Definition update events (Event IDs 2000, 2001, 2002)
  - Configuration changes and tampering attempts
  - Quarantine operations

  This artifact enables real-time monitoring and hunting for:
  - Active malware detections and responses
  - Defender service tampering attempts
  - Failed scans or protection events
  - Threat intelligence correlation

  **Performance Note:** This artifact monitors live event logs and may generate
  significant output on systems with high security activity.

reference:
  - https://docs.microsoft.com/en-us/windows/security/threat-protection/microsoft-defender-antivirus/troubleshoot-microsoft-defender-antivirus
  - https://attack.mitre.org/techniques/T1562/001/ (Impair Defenses: Disable or Modify Tools)

parameters:
  - name: EvtxGlob
    default: '%SystemRoot%\System32\winevt\logs\Microsoft-Windows-Windows Defender%4Operational.evtx'
    description: "Event log file glob pattern for Windows Defender logs"
  
  - name: DateAfter
    description: "Search for events after this date (YYYY-MM-DDTmm:hh:ss Z)"
    type: timestamp
  
  - name: DateBefore
    description: "Search for events before this date (YYYY-MM-DDTmm:hh:ss Z)"
    type: timestamp
  
  - name: EventTypes
    description: "Types of Defender events to monitor"
    type: choices
    default: All
    choices:
      - All
      - ThreatDetection
      - Scans
      - Updates
      - RealTimeProtection
      - Configuration
      - Quarantine
  
  - name: EventTypeMap
    type: hidden
    default: |
      Choice,EventIDs
      All,"."
      ThreatDetection,"1116|1117|1118|1119"
      Scans,"1001|1002|1003|1004|1005|1006|1007"
      Updates,"2000|2001|2002|2003|2004|2005"
      RealTimeProtection,"5001|5004|5007|5008|5009|5010|5012"
      Configuration,"5013|5014|5015"
      Quarantine,"1009|1010|1011|1012"
  
  - name: ThreatNameRegex
    type: regex
    default: "."
    description: "Regex to filter by threat name"
  
  - name: SeverityLevel
    description: "Minimum threat severity level to include"
    type: choices
    default: All
    choices:
      - All
      - Low
      - Moderate  
      - High
      - Severe
  
  - name: SeverityMap
    type: hidden
    default: |
      Choice,Regex
      All,"."
      Low,"1|2|3|4|5"
      Moderate,"2|3|4|5"
      High,"3|4|5"
      Severe,"4|5"
  
  - name: VSSAnalysisAge
    type: int
    default: 0
    description: |
      If larger than zero we analyze VSS within this many days
      ago. (e.g 7 will analyze all VSS within the last week).

sources:
  - query: |
      LET VSS_MAX_AGE_DAYS <= VSSAnalysisAge
      LET Accessor = if(condition=VSSAnalysisAge > 0, then="ntfs_vss", else="auto")

      -- Set time bounds for performance
      LET DateAfterTime <= if(condition=DateAfter,
        then=timestamp(epoch=DateAfter), else=timestamp(epoch="1600-01-01"))
      LET DateBeforeTime <= if(condition=DateBefore,
        then=timestamp(epoch=DateBefore), else=timestamp(epoch="2200-01-01"))

      -- Parse Event Type dropdown selection
      LET EventIDRegex <= SELECT format(format="%v", args=EventIDs) as value
        FROM parse_csv(filename=EventTypeMap, accessor="data")
        WHERE Choice=EventTypes LIMIT 1

      -- Parse Severity Level dropdown selection  
      LET SeverityRegex <= SELECT format(format="%v", args=Regex) as value
        FROM parse_csv(filename=SeverityMap, accessor="data")
        WHERE Choice=SeverityLevel LIMIT 1

      -- Expand provided glob into list of paths
      LET fspaths = SELECT OSPath
        FROM glob(globs=expand(path=EvtxGlob), accessor=Accessor)

      -- Function returning Defender events
      LET evtxsearch(PathList) = SELECT * FROM foreach(
            row=PathList,
            query={
                SELECT
                  timestamp(epoch=int(int=System.TimeCreated.SystemTime)) AS EventTime,
                  System.Computer as Computer,
                  System.Channel as Channel,
                  System.EventID.Value as EventID,
                  System.Security.UserID as SecurityID,
                  System.EventRecordID as EventRecordID,
                  System.Level as Level,
                  System.Task as Task,
                  
                  -- Threat Detection Fields
                  EventData.`Threat Name` as ThreatName,
                  EventData.`Severity ID` as SeverityID,
                  EventData.`Category ID` as CategoryID,
                  EventData.Path as ThreatPath,
                  EventData.`Detection Source` as DetectionSource,
                  EventData.`Process Name` as ProcessName,
                  EventData.`Security intelligence Version` as SignatureVersion,
                  EventData.`Engine Version` as EngineVersion,
                  
                  -- Scan Fields
                  EventData.`Scan ID` as ScanID,
                  EventData.`Scan Type` as ScanType,
                  EventData.`Scan Parameters` as ScanParameters,
                  EventData.User as ScanUser,
                  EventData.`Start Time` as ScanStartTime,
                  EventData.`End Time` as ScanEndTime,
                  EventData.`Elapsed Time` as ScanElapsedTime,
                  
                  -- Update Fields
                  EventData.`Current Signature Version` as CurrentSigVersion,
                  EventData.`Previous Signature Version` as PreviousSigVersion,
                  EventData.`Signature Type` as SignatureType,
                  EventData.`Update Source` as UpdateSource,
                  
                  -- Real-time Protection Fields
                  EventData.`New Value` as NewValue,
                  EventData.`Old Value` as OldValue,
                  
                  -- Additional Fields
                  EventData.`Error Code` as ErrorCode,
                  EventData.`Error Description` as ErrorDescription,
                  EventData.State as State,
                  EventData.`Action ID` as ActionID,
                  EventData.`Action` as Action,
                  EventData.`Additional Actions ID` as AdditionalActionsID,
                  EventData.`Additional Actions` as AdditionalActions,
                  
                  get(field="Message") as Message,
                  OSPath,
                  
                  -- Add custom fields for analysis
                  if(condition=EventData.`Threat Name`,
                     then=format(format="THREAT_DETECTED: %v", args=EventData.`Threat Name`),
                     else="") as ThreatAlert,
                  
                  if(condition=System.EventID.Value in (5001, 5004, 5007),
                     then="REALTIME_PROTECTION_EVENT",
                     else=if(condition=System.EventID.Value in (1116, 1117),
                            then="MALWARE_DETECTION", 
                            else=if(condition=System.EventID.Value in (1001, 1002),
                                   then="SCAN_COMPLETED",
                                   else="OTHER"))) as EventCategory

                FROM parse_evtx(filename=OSPath, accessor=Accessor)
                WHERE EventTime < DateBeforeTime
                    AND EventTime > DateAfterTime
                    AND str(str=System.EventID.Value) =~ EventIDRegex.value[0]
                    AND if(condition=ThreatNameRegex != ".",
                           then=EventData.`Threat Name` =~ ThreatNameRegex,
                           else=TRUE)
                    AND if(condition=SeverityLevel != "All" AND EventData.`Severity ID`,
                           then=str(str=EventData.`Severity ID`) =~ SeverityRegex.value[0],
                           else=TRUE)
          })

        SELECT * FROM evtxsearch(PathList=fspaths)
        ORDER BY EventTime DESC

reports:
  - type: CLIENT
    template: |
      # Windows Defender Event Analysis Report

      {{ $events := Query "SELECT * FROM source()" }}
      {{ $threats := Query "SELECT count() as Count, ThreatName FROM source() WHERE ThreatName GROUP BY ThreatName ORDER BY Count DESC" }}
      {{ $categories := Query "SELECT count() as Count, EventCategory FROM source() WHERE EventCategory != 'OTHER' GROUP BY EventCategory ORDER BY Count DESC" }}
      
      ## Summary
      
      **Total Events:** {{ len $events }}
      
      ## Threat Detections
      {{ if $threats }}
      | Threat Name | Count |
      |-------------|-------|
      {{ range $threats }}| {{ .ThreatName }} | {{ .Count }} |
      {{ end }}
      {{ else }}
      No threats detected in the analyzed timeframe.
      {{ end }}
      
      ## Event Categories
      {{ if $categories }}
      | Category | Count |
      |----------|-------|
      {{ range $categories }}| {{ .EventCategory }} | {{ .Count }} |
      {{ end }}
      {{ end }}
      
      ## Recent Events
      {{ range $events | Slice 0 10 }}
      **{{ .EventTime }}** - Event ID {{ .EventID }}: {{ .EventCategory }}
      {{ if .ThreatName }}⚠️  **Threat:** {{ .ThreatName }}{{ end }}
      {{ if .Message }}{{ .Message | Truncate 200 }}{{ end }}
      
      ---
      {{ end }}